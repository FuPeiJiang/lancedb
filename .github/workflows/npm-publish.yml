name: NPM Publish
on: [push]

jobs:
  node-linux:
    name: vectordb (${{ matrix.config.arch}}-unknown-linux-musl)
    runs-on: ${{ matrix.config.runner }}
    container: ${{ matrix.config.container }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x86_64
            runner: ubuntu-latest
            container: alpine:edge
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
            apk add protobuf-dev curl clang mold grep
            curl --proto '=https' --tlsv1.3 -sSf https://raw.githubusercontent.com/rust-lang/rustup/refs/heads/master/rustup-init.sh | sh -s -- -y --default-toolchain 1.80.0
            source "$HOME/.cargo/env"
            rustup target add aarch64-unknown-linux-musl --toolchain 1.80.0
            crt=$(realpath $(dirname $(rustup which rustc))/../lib/rustlib/aarch64-unknown-linux-musl/lib/self-contained)
            sysroot_lib=/usr/aarch64-unknown-linux-musl/usr/lib
            apk_url=https://dl-cdn.alpinelinux.org/alpine/latest-stable/main/aarch64/
            libgcc_apk=$(curl -sSf $apk_url | grep -oP '(?<=")libgcc-\d.*?(?=")')
            curl -sSf $apk_url$libgcc_apk | tar zxf -
            mkdir -p $sysroot_lib
            echo 'GROUP ( libgcc_s.so.1 -lgcc )'>$sysroot_lib/libgcc_s.so
            cp usr/lib/libgcc_s.so.1 $sysroot_lib
            cp $crt/crti.o $sysroot_lib
            cp $crt/crtbeginS.o $sysroot_lib
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true