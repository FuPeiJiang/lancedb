name: NPM Publish
on: [push]

jobs:

  node-windows:
    name: vectordb aarch64-pc-windows-msvc
    runs-on: ubuntu-latest
    container: alpine:edge
    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apk add protobuf-dev curl clang lld llvm19 grep npm bash msitools sed
          curl --proto '=https' --tlsv1.3 -sSf https://raw.githubusercontent.com/rust-lang/rustup/refs/heads/master/rustup-init.sh | sh -s -- -y --default-toolchain 1.80.0
          echo "source $HOME/.cargo/env" >> saved_env
          echo "export CC=clang" >> saved_env
          source "$HOME/.cargo/env"
          rustup target add aarch64-pc-windows-msvc --toolchain 1.80.0
          (mkdir -p sysroot && cd sysroot && sh ../ci/sysroot-aarch64-pc-windows-msvc.sh)
          echo "export AR=llvm-ar" >> saved_env
          echo "export C_INCLUDE_PATH=/usr/aarch64-pc-windows-msvc/usr/include" >> saved_env
          echo "export CARGO_BUILD_TARGET=aarch64-pc-windows-msvc" >> saved_env
          echo "export RUSTFLAGS='-Ctarget-feature=+crt-static,+neon,+fp16,+fhm,+dotprod -Clinker=lld -Clink-arg=/LIBPATH:/usr/aarch64-pc-windows-msvc/usr/lib -Clink-arg=arm64rt.lib'" >> saved_env
      - name: Build Linux Artifacts
        run: |
          source ./saved_env
          bash ci/manylinux_node/build_vectordb.sh ${{ matrix.config.arch }}
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node-native-windows
          path: |
            node/dist/lancedb-vectordb-win32*.tgz